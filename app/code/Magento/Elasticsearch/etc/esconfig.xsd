<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * This schema must be used to validate esconfig.xml files
 *
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="config" type="configType" />
    <xs:complexType name="configType" mixed="true">
        <xs:choice maxOccurs="unbounded" minOccurs="1">
            <xs:element name="stemmer" type="mixedDataType" />
            <xs:element name="stopwords_file" type="mixedDataType" />
            <xs:element name="tokenizer" type="tokenizerChoiceType" />
            <xs:element name="token_filters" type="filterChoiceType">
                <xs:unique name="UniqueCustomizedTokenFilterName">
                    <xs:selector xpath="*/customized_filter" />
                    <xs:field xpath="@name" />
                </xs:unique>
            </xs:element>
            <xs:element name="char_filters" type="filterChoiceType">
                <xs:unique name="UniqueCustomizedCharFilterName">
                    <xs:selector xpath="*/customized_filter" />
                    <xs:field xpath="@name" />
                </xs:unique>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="mixedDataType" mixed="true">
        <xs:choice maxOccurs="unbounded" minOccurs="1">
            <xs:element type="xs:string" name="default" minOccurs="1" maxOccurs="1" />
            <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="tokenizerChoiceType">
        <xs:choice maxOccurs="unbounded">
            <xs:element type="tokenizerType" name="default"/>
            <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="tokenizerType">
        <xs:sequence>
            <xs:element name="type" type="xs:string" minOccurs="0"/>
            <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="filterChoiceType" mixed="true">
        <xs:choice maxOccurs="unbounded">
            <xs:element type="filterContainerType" name="default" minOccurs="0" />
            <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="filterContainerType" mixed="true">
        <xs:choice maxOccurs="unbounded">
            <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="esConfigItemType" abstract="true" mixed="true">
        <xs:attribute name="disabled" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="filterType" abstract="true" mixed="true">
        <xs:complexContent>
            <xs:extension base="esConfigItemType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="standardFilter" mixed="true">
        <xs:complexContent>
            <xs:extension base="filterType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="customizedFilter" mixed="true">
        <xs:complexContent>
            <xs:extension base="filterType">
                <xs:sequence>
                    <xs:element name="type" type="xs:string" minOccurs="0"/>
                    <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="esConfigParamType" abstract="true" mixed="true">
        <xs:complexContent>
            <xs:extension base="esConfigItemType">
                <xs:attribute name="ref" type="xs:normalizedString"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="string">
        <xs:complexContent>
            <xs:extension base="esConfigParamType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="boolean">
        <xs:complexContent>
            <xs:extension base="esConfigParamType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="number">
        <xs:complexContent>
            <xs:extension base="esConfigParamType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="list" mixed="true">
        <xs:complexContent>
            <xs:extension base="esConfigParamType">
                <xs:sequence>
                    <xs:element name="item" type="esConfigParamType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="map" mixed="true">
        <xs:complexContent>
            <xs:extension base="esConfigParamType">
                <xs:sequence>
                    <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>
